#!/bin/bash

MM_HOOK=https://<server-name>/hooks/XXXXXXXXXXXXXXXXXXXXXXX
MM_NAME=git
MM_CHAN=dev

function notify() {
  oldrev=$(git rev-parse $1)
  newrev=$(git rev-parse $2)
  refname="$3"

  # --- Interpret
  # 0000->1234 (create)
  # 1234->2345 (update)
  # 2345->0000 (delete)
  if expr "$oldrev" : '0*$' >/dev/null
  then
    change_type="create"
  else
    if expr "$newrev" : '0*$' >/dev/null
    then
      change_type="delete"
    else
      change_type="update"
    fi
  fi

  # --- Get the revision types
  newrev_type=$(git cat-file -t $newrev 2> /dev/null)
  oldrev_type=$(git cat-file -t "$oldrev" 2> /dev/null)
  case "$change_type" in
    create|update)
      rev="$newrev"
      rev_type="$newrev_type"
      ;;
    delete)
      rev="$oldrev"
      rev_type="$oldrev_type"
      ;;
  esac
  
  # The revision type tells us what type the commit is, combined with
  # the location of the ref we can decide between
  #  - working branch
  #  - tracking branch
  #  - unannoted tag
  #  - annotated tag
  case "$refname","$rev_type" in
    refs/tags/*,commit)
      # un-annotated tag
      refname_type="tag"
      short_refname=${refname##refs/tags/}
      ;;
    refs/tags/*,tag)
      # annotated tag
      refname_type="annotated tag"
      short_refname=${refname##refs/tags/}
      ;;
    refs/heads/*,commit)
      # branch
      refname_type="branch"
      short_refname=${refname##refs/heads/}
      ;;
    refs/remotes/*,commit)
      # tracking branch
      refname_type="tracking branch"
      short_refname=${refname##refs/remotes/}
      echo >&2 "*** Push-update of tracking branch, $refname"
      echo >&2 "***  - no notification generated."
      return 0
      ;;
    *)
      # Anything else (is there anything else?)
      echo >&2 "*** Unknown type of update to $refname ($rev_type)"
      echo >&2 "***  - no notification generated"
      return 0
      ;;
  esac

  repodir=$(basename $(pwd))
  if [ "$repodir" == ".git" ]; then
      repodir=$(dirname $PWD)
      repodir=$(basename $repodir)
  fi
  repo=${repodir%.git}

  case ${change_type} in
      "create")
          header="New ${refname_type} *${short_refname}* has been created in ${repo}"
          ;;
      "delete")
          header="$(tr '[:lower:]' '[:upper:]' <<< ${refname_type:0:1})${refname_type:1} *$short_refname* has been deleted from ${repo}"
          ;;
      "update")
          num=$(git log --pretty=oneline ${1}..${2}|wc -l|tr -d ' ')
          if [ ${num} -gt 1 ]; then
              header="${num} new commits *pushed* to *${short_refname}* in ${repo}"
          else
              header="A new commit has been *pushed* to *${short_refname}* in ${repo}"
          fi          
          ;;
      *)
          echo >&2 "*** Unknown type of update to $refname ($rev_type)"
          echo >&2 "***  - notifications will probably screw up."
          ;;
  esac

  start=$([ "${change_type}" == "update" ] && echo "${1}" || echo "HEAD")
  end="${2}"
  logstats=$(git log --stat ${start}..${end})
  text="${header}\n \`\`\`\n${logstats}\`\`\`"
    
  curl -i -X POST -d "payload={\"username\": \"$MM_NAME\",
                               \"channel\":  \"$MM_CHAN\",
                               \"text\":     \"${text}\"}" $MM_HOOK
}

#| MAIN
while read line; do
  set -- $line
  notify $*
  RET=$?
done

exit $RET
